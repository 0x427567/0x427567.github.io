<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>0x427567</title>
  <subtitle>A geek, developer and gamer, regards.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.0x427567.com/"/>
  <updated>2017-10-02T09:15:13.000Z</updated>
  <id>https://blog.0x427567.com/</id>
  
  <author>
    <name>Shawn OY</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>How to integrate Express.js and Sequelize - Part 1</title>
    <link href="https://blog.0x427567.com/2017/10/02/How-to-integrate-Express-js-and-Sequelize-Part-1/"/>
    <id>https://blog.0x427567.com/2017/10/02/How-to-integrate-Express-js-and-Sequelize-Part-1/</id>
    <published>2017-10-02T09:07:15.000Z</published>
    <updated>2017-10-02T09:15:13.000Z</updated>
    
    <content type="html"><![CDATA[<a href="http://docs.sequelizejs.com/" title="Sequelize" rel="external nofollow noopener noreferrer" target="_blank">Sequelize</a> is an ORM for Node.js and it supports many databases such as MySQl, PostgreSQL, MSSQL, MariaDB and SQLite, I will show you how to using Sequelize in the Express. By the way, Sequelize is very different between v3 and v4, this article is focus on v4, for more information you can read (official document)[<a href="http://docs.sequelizejs.com/manual/tutorial/upgrade-to-v4.html" rel="external nofollow noopener noreferrer" target="_blank">http://docs.sequelizejs.com/manual/tutorial/upgrade-to-v4.html</a>].<br><a id="more"></a>
<h2 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h2><p>First create a new Express app, you can build it yourself, but I recommended you use <a href="https://expressjs.com/en/starter/generator.html" title="express-generator" rel="external nofollow noopener noreferrer" target="_blank">express-generator</a>, so let’s install generator first. In general, we using npm to help handle packages, for now, I recommended use Yarn, but this article is not about it so we just show you how to do.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"># Install express-generator</div><div class="line">yarn global add express-generator</div><div class="line"></div><div class="line"># Create the app directory</div><div class="line">mkdir express-sequelize</div><div class="line">cd express-sequelize</div><div class="line"></div><div class="line"># Initial and use pug template engine</div><div class="line">express -f -v pug</div><div class="line"></div><div class="line"># Install modules</div><div class="line">yarn install</div></pre></td></tr></table></figure>
<h2 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h2><p>Install related modules about database, for this sample I will use SQLite.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># Install modules</div><div class="line">yarn add sequelize sequelize-cli sqlite3</div><div class="line"></div><div class="line"># Initial</div><div class="line">node_modules/.bin/sequelize init</div></pre></td></tr></table></figure>
<h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><p>In this sample, we can manage masters, the master can owned many pets but pet only have a master, so generate two models first.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># Generate a table named Master have one filed named &quot;name&quot;, the type is string</div><div class="line">node_modules/.bin/sequelize model:create --name Master --attributes name:string(20)</div><div class="line"></div><div class="line"># Generate a table named Pet have two fileds, it&apos;s name and MasterId, MasterId will be associate to Master table</div><div class="line">node_modules/.bin/sequelize model:create --name Pet --attributes name:string(20),MasterId:integer</div></pre></td></tr></table></figure>
<p>sequelize-cli will add primary key for you, the field named id and type is integer, so in the pet model we need add MasterId field, by default, sequelize use table name and Id be foreign key, and first word is uppercase.</p>
<p>Now you have two model files in the models directory and named master.js and pet.js, next step we will create a simple associate.</p>
<h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>Open your master.js you will see the code likes below.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">'use strict'</span>;</div><div class="line"><span class="built_in">module</span>.exports = <span class="function">(<span class="params">sequelize, DataTypes</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">var</span> Master = sequelize.define(<span class="string">'Master'</span>, &#123;</div><div class="line">    <span class="attr">name</span>: DataTypes.STRING(<span class="number">20</span>)</div><div class="line">  &#125;, &#123;</div><div class="line">    <span class="attr">classMethods</span>: &#123;</div><div class="line">      <span class="attr">associate</span>: <span class="function"><span class="keyword">function</span>(<span class="params">models</span>) </span>&#123;</div><div class="line">        <span class="comment">// associations can be defined here</span></div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;);</div><div class="line">  <span class="keyword">return</span> Master;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>Let’s add associate.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">'use strict'</span>;</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = <span class="function">(<span class="params">sequelize, DataTypes</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">const</span> Master = sequelize.define(<span class="string">'Master'</span>, &#123;</div><div class="line">    <span class="attr">name</span>: DataTypes.STRING(<span class="number">20</span>)</div><div class="line">  &#125;)</div><div class="line"></div><div class="line">  Master.associate = <span class="function"><span class="params">models</span> =&gt;</span> &#123;</div><div class="line">    Master.hasMany(models.Pet)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">return</span> Master;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Next open your pet.js you will see the code likes below.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">'use strict'</span>;</div><div class="line"><span class="built_in">module</span>.exports = <span class="function">(<span class="params">sequelize, DataTypes</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">var</span> Pet = sequelize.define(<span class="string">'Pet'</span>, &#123;</div><div class="line">    <span class="attr">name</span>: DataTypes.STRING(<span class="number">20</span>),</div><div class="line">    <span class="attr">MasterId</span>: DataTypes.INTEGER</div><div class="line">  &#125;, &#123;</div><div class="line">    <span class="attr">classMethods</span>: &#123;</div><div class="line">      <span class="attr">associate</span>: <span class="function"><span class="keyword">function</span>(<span class="params">models</span>) </span>&#123;</div><div class="line">        <span class="comment">// associations can be defined here</span></div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;);</div><div class="line">  <span class="keyword">return</span> Pet;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>Now add associate to Pet model.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">'use strict'</span></div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = <span class="function">(<span class="params">sequelize, DataTypes</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">const</span> Pet = sequelize.define(<span class="string">'Pet'</span>, &#123;</div><div class="line">    <span class="attr">name</span>: DataTypes.STRING(<span class="number">20</span>),</div><div class="line">    <span class="attr">MasterId</span>: DataTypes.INTEGER</div><div class="line">  &#125;)</div><div class="line"></div><div class="line">  Pet.associate = <span class="function"><span class="params">models</span> =&gt;</span> &#123;</div><div class="line">    Pet.belongsTo(models.Master)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">return</span> Pet</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>It’s so easy right?</p>
<h2 id="0x05"><a href="#0x05" class="headerlink" title="0x05"></a>0x05</h2><p>In this step, we need to edit database config, open your config.json, you can find it in the config directory.</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"development"</span>: &#123;</div><div class="line">    <span class="attr">"dialect"</span>: <span class="string">"sqlite"</span>,</div><div class="line">    <span class="attr">"storage"</span>: <span class="string">"./express-sequelize.development.sqlite"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"test"</span>: &#123;</div><div class="line">    <span class="attr">"dialect"</span>: <span class="string">"sqlite"</span>,</div><div class="line">    <span class="attr">"storage"</span>: <span class="string">"memory"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"production"</span>: &#123;</div><div class="line">    <span class="attr">"username"</span>: <span class="string">"root"</span>,</div><div class="line">    <span class="attr">"password"</span>: <span class="literal">null</span>,</div><div class="line">    <span class="attr">"database"</span>: <span class="string">"database_production"</span>,</div><div class="line">    <span class="attr">"host"</span>: <span class="string">"127.0.0.1"</span>,</div><div class="line">    <span class="attr">"dialect"</span>: <span class="string">"mysql"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="0x06"><a href="#0x06" class="headerlink" title="0x06"></a>0x06</h2><p>This is last step in part 1, now we need to initial database, create table and some else.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">node_modules/.bin/sequelize db:migrate</div></pre></td></tr></table></figure>
<p>You will find a sqlite file created in your app root.</p>
<p>Well, how to use I will show you in the next part, let me know if you have any question, thanks!</p>
]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;http://docs.sequelizejs.com/&quot; title=&quot;Sequelize&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Sequelize&lt;/a&gt; is an ORM for Node.js and it supports many databases such as MySQl, PostgreSQL, MSSQL, MariaDB and SQLite, I will show you how to using Sequelize in the Express. By the way, Sequelize is very different between v3 and v4, this article is focus on v4, for more information you can read (official document)[&lt;a href=&quot;http://docs.sequelizejs.com/manual/tutorial/upgrade-to-v4.html&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;http://docs.sequelizejs.com/manual/tutorial/upgrade-to-v4.html&lt;/a&gt;].&lt;br&gt;
    
    </summary>
    
      <category term="Tutorial" scheme="https://blog.0x427567.com/categories/Tutorial/"/>
    
    
      <category term="Tutorial" scheme="https://blog.0x427567.com/tags/Tutorial/"/>
    
      <category term="Database" scheme="https://blog.0x427567.com/tags/Database/"/>
    
      <category term="Nodejs" scheme="https://blog.0x427567.com/tags/Nodejs/"/>
    
  </entry>
  
  <entry>
    <title>Dockerize Google Guetzli</title>
    <link href="https://blog.0x427567.com/2017/05/16/Dockerize-Google-guetzli/"/>
    <id>https://blog.0x427567.com/2017/05/16/Dockerize-Google-guetzli/</id>
    <published>2017-05-16T02:48:36.000Z</published>
    <updated>2017-05-18T01:10:07.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-Introduction"><a href="#0x00-Introduction" class="headerlink" title="0x00 Introduction"></a>0x00 Introduction</h2><a href="https://github.com/google/guetzli" title="Google Guetzli" rel="external nofollow noopener noreferrer" target="_blank">Google Guetzli</a> is a JPEG encoder, it can compress image and lossless quality, in my case, the image size will reduce 15% ~ 50% and I can not distinguish which one is compressed, below is example.<br><a id="more"></a>
<img src="/2017/05/16/Dockerize-Google-guetzli/cat-origin.jpg" alt="Before" title="Before">
<img src="/2017/05/16/Dockerize-Google-guetzli/cat-compressed.jpg" alt="After" title="After">
<p>But it is not perfect, Guetzli uses a lot CPU time and RAM, for a long time it will reduce cost likes CDN. Well, it’s cool and amazing so I decided dockerize  it to a micro service.</p>
<h2 id="0x01-Prepare"><a href="#0x01-Prepare" class="headerlink" title="0x01 Prepare"></a>0x01 Prepare</h2><p>First, you need installed Docker in your system, second you need pull the image.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker pull shawnoy/guetzli</div></pre></td></tr></table></figure>
<h2 id="0x02-How-to-use"><a href="#0x02-How-to-use" class="headerlink" title="0x02 How to use"></a>0x02 How to use</h2><p>In the image folder, run command below, origin.jpg is which one image you would be compress, output.jpg is output file name.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run --rm -v $(pwd):/home/guetzli shawnoy/guetzli origin.jpg output.jpg</div></pre></td></tr></table></figure>
<h2 id="0x03-More"><a href="#0x03-More" class="headerlink" title="0x03 More"></a>0x03 More</h2><p>You can find Dockerfile in my GitHub</p>
<p><a href="https://github.com/ShawnOY/docker-guetzli" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/ShawnOY/docker-guetzli</a></p>
<p>Or you can find more in my Docker Hub</p>
<p><a href="https://hub.docker.com/r/shawnoy/guetzli/" rel="external nofollow noopener noreferrer" target="_blank">https://hub.docker.com/r/shawnoy/guetzli/</a></p>
<p>Let me know if you have any question, thanks! :)</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-Introduction&quot;&gt;&lt;a href=&quot;#0x00-Introduction&quot; class=&quot;headerlink&quot; title=&quot;0x00 Introduction&quot;&gt;&lt;/a&gt;0x00 Introduction&lt;/h2&gt;&lt;a href=&quot;https://github.com/google/guetzli&quot; title=&quot;Google Guetzli&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Google Guetzli&lt;/a&gt; is a JPEG encoder, it can compress image and lossless quality, in my case, the image size will reduce 15% ~ 50% and I can not distinguish which one is compressed, below is example.&lt;br&gt;
    
    </summary>
    
    
      <category term="Docker" scheme="https://blog.0x427567.com/tags/Docker/"/>
    
      <category term="Google" scheme="https://blog.0x427567.com/tags/Google/"/>
    
  </entry>
  
  <entry>
    <title>Solve screen error message Cannot open your terminal &#39;/dev/pts/0&#39;</title>
    <link href="https://blog.0x427567.com/2017/04/13/Solve-screen-error-message-Cannot-open-your-terminal-dev-pts-0/"/>
    <id>https://blog.0x427567.com/2017/04/13/Solve-screen-error-message-Cannot-open-your-terminal-dev-pts-0/</id>
    <published>2017-04-13T06:59:41.000Z</published>
    <updated>2017-04-13T07:02:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>I have no idea why this issue happened, but I need screen in my job then I found a easy way to solve this issue, so I decided write down and share to people how to do.</p>
<p>If you execute screen and got the error message like below:<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Cannot open your terminal &apos;/dev/pts/0&apos;</div></pre></td></tr></table></figure></p>
<p>Please notice, the zero may not be zero, it could be any number.</p>
<p>Just do:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">script /dev/null</div></pre></td></tr></table></figure>
<p>And execute screen again, it will be fine! Let me know if you have any question, thanks!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I have no idea why this issue happened, but I need screen in my job then I found a easy way to solve this issue, so I decided write down and share to people how to do.&lt;/p&gt;
&lt;p&gt;If you execute screen and got the error message like below:&lt;br&gt;
    
    </summary>
    
    
      <category term="Tutorial" scheme="https://blog.0x427567.com/tags/Tutorial/"/>
    
      <category term="Linux" scheme="https://blog.0x427567.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Sweet!AWS Lambda is support Node.js 6.10 now!</title>
    <link href="https://blog.0x427567.com/2017/03/23/Sweet-AWS-Lambda-is-support-Node-js-6-10-now/"/>
    <id>https://blog.0x427567.com/2017/03/23/Sweet-AWS-Lambda-is-support-Node-js-6-10-now/</id>
    <published>2017-03-23T06:54:03.000Z</published>
    <updated>2017-03-23T06:54:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>Today, AWS tweeted a message:</p>
<blockquote><p>AWS Lambda now supports Node.js v6.10! #cloudcomputing <a href="http://amzn.to/2muc1Su" rel="external nofollow noopener noreferrer" target="_blank">http://amzn.to/2muc1Su</a></p>
<footer><strong>@awscloud</strong><cite><a href="https://twitter.com/awscloud/status/844682201593659393" rel="external nofollow noopener noreferrer" target="_blank">twitter.com/awscloud/status/844682201593659393</a></cite></footer></blockquote>
<a id="more"></a>
<p>Sweet! Lambda is support Node.js 6.10 now!</p>
<p>WAIT! What about Python 3? It still stuck in 2.7 version. Here is AWS official forum about support Python 3:</p>
<p><a href="https://forums.aws.amazon.com/thread.jspa?threadID=234388" rel="external nofollow noopener noreferrer" target="_blank">https://forums.aws.amazon.com/thread.jspa?threadID=234388</a></p>
<p>One year has passed, no more news, if you are a Python 3 developer, maybe you can reply the article and tell Amazon what you need.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Today, AWS tweeted a message:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;AWS Lambda now supports Node.js v6.10! #cloudcomputing &lt;a href=&quot;http://amzn.to/2muc1Su&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;http://amzn.to/2muc1Su&lt;/a&gt;&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;@awscloud&lt;/strong&gt;&lt;cite&gt;&lt;a href=&quot;https://twitter.com/awscloud/status/844682201593659393&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;twitter.com/awscloud/status/844682201593659393&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="AWS" scheme="https://blog.0x427567.com/tags/AWS/"/>
    
      <category term="Lambda" scheme="https://blog.0x427567.com/tags/Lambda/"/>
    
      <category term="Node.js" scheme="https://blog.0x427567.com/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>A shell script about MySQL backup</title>
    <link href="https://blog.0x427567.com/2017/03/08/A-shell-script-about-MySQL-backup/"/>
    <id>https://blog.0x427567.com/2017/03/08/A-shell-script-about-MySQL-backup/</id>
    <published>2017-03-08T03:11:43.000Z</published>
    <updated>2017-03-08T03:28:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hello, here is a simple shell script, it can help me easy going to backup MySQL, I hope this script can help you all. Below is full script or you can clone from <a href="[https://github.com/ShawnOY/shell-script]" title="[my GitHub]">my GitHub url</a>.</p>
<h1 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h1><ul>
<li>Sync to remote server.</li>
<li>Auto delete older than N days backup file.<a id="more"></a>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="comment"># Detect commands path</span></div><div class="line">DUMP=`<span class="built_in">which</span> mysqldump`</div><div class="line">GZIP=`<span class="built_in">which</span> gzip`</div><div class="line">FIND=`<span class="built_in">which</span> find`</div><div class="line"></div><div class="line"><span class="comment"># MySQL username &amp; password</span></div><div class="line">USER=<span class="string">''</span></div><div class="line">PASSWD=<span class="string">''</span></div><div class="line"></div><div class="line"><span class="comment"># rsync username, password, backup module and remote server</span></div><div class="line">RUSER=<span class="string">''</span></div><div class="line">RPASSWD=<span class="string">''</span></div><div class="line">RMODULE=<span class="string">''</span></div><div class="line">RSERVER=<span class="string">''</span></div><div class="line"></div><div class="line"><span class="comment"># Backup folder</span></div><div class="line">BACKUPFOLDER=<span class="string">''</span></div><div class="line"></div><div class="line"><span class="comment"># How older backup files will delete(Unit: day)</span></div><div class="line">OLDER=7</div><div class="line"></div><div class="line"><span class="comment"># Which database needs to backup</span></div><div class="line">databases=(</div><div class="line">)</div><div class="line"></div><div class="line"><span class="comment"># Start backup</span></div><div class="line"><span class="keyword">for</span> db <span class="keyword">in</span> <span class="variable">$&#123;databases[@]&#125;</span>;</div><div class="line"><span class="keyword">do</span></div><div class="line">  <span class="built_in">echo</span> Backuping database: <span class="variable">$db</span></div><div class="line">  <span class="variable">$DUMP</span> -u<span class="variable">$USER</span> -p<span class="variable">$PASSWD</span> --databases <span class="variable">$db</span> | <span class="variable">$GZIP</span> &gt; <span class="variable">$BACKUPFOLDER</span>/<span class="variable">$db</span>-`date +%Y%m%d%H%M`.sql.gz</div><div class="line"><span class="keyword">done</span></div><div class="line"></div><div class="line"><span class="comment"># Delete old backup files</span></div><div class="line"><span class="variable">$FIND</span> <span class="variable">$BACKUPFOLDER</span>/* -mtime +<span class="variable">$OLDER</span> -exec rm &#123;&#125; \;</div><div class="line"></div><div class="line"><span class="comment"># rsync password</span></div><div class="line"><span class="built_in">export</span> RSYNC_PASSWORD=<span class="variable">$RPASSWD</span></div><div class="line"></div><div class="line"><span class="comment"># Start sync to remote server</span></div><div class="line">rsync -avrHS --delete <span class="variable">$BACKUPFOLDER</span>/ <span class="variable">$RUSER</span>@<span class="variable">$RSERVER</span>::<span class="variable">$RMODULE</span></div></pre></td></tr></table></figure>
<p><strong>Notice</strong></p>
<p>rsync is using its backup module, so you need to setting your rsync.conf.</p>
<p>If you have any question, let me know it please, just write down in the below! :)</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hello, here is a simple shell script, it can help me easy going to backup MySQL, I hope this script can help you all. Below is full script or you can clone from &lt;a href=&quot;[https://github.com/ShawnOY/shell-script]&quot; title=&quot;[my GitHub]&quot;&gt;my GitHub url&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&quot;Features&quot;&gt;&lt;a href=&quot;#Features&quot; class=&quot;headerlink&quot; title=&quot;Features&quot;&gt;&lt;/a&gt;Features&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Sync to remote server.&lt;/li&gt;
&lt;li&gt;Auto delete older than N days backup file.
    
    </summary>
    
    
      <category term="MySQL" scheme="https://blog.0x427567.com/tags/MySQL/"/>
    
      <category term="Database" scheme="https://blog.0x427567.com/tags/Database/"/>
    
      <category term="Shell Script" scheme="https://blog.0x427567.com/tags/Shell-Script/"/>
    
      <category term="DevOps" scheme="https://blog.0x427567.com/tags/DevOps/"/>
    
  </entry>
  
  <entry>
    <title>How to add sitemap to your Hexo blog</title>
    <link href="https://blog.0x427567.com/2017/02/09/How-to-add-sitemap-to-your-Hexo-blog/"/>
    <id>https://blog.0x427567.com/2017/02/09/How-to-add-sitemap-to-your-Hexo-blog/</id>
    <published>2017-02-09T00:42:41.000Z</published>
    <updated>2017-02-09T01:02:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>If you need to know how to deploy your blog to GitHub Pages read <a href="/2016/08/04/Using-Hexo-to-build-a-blog-at-GitHub/" title="this article">this article</a> first.</p>
<p>In latest version, Hexo still not include sitemap function, if you need to publish sitemap to webmaster tool some likes Google or Bing you will need install sitemap plugin by yourself.<br><a id="more"></a><br>First thing first, in your blog folder and install sitemap generator.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i hexo-generator-sitemap --save</div></pre></td></tr></table></figure>
<p>When the plugin is installed then edit your main _config.yml and add sitemap config likes below.</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">sitemap:</span></div><div class="line"><span class="attr">  path:</span> sitemap.xml</div><div class="line"><span class="attr">  template:</span> ./sitemap_template.xml</div></pre></td></tr></table></figure>
<p>Last step is deploy your blog to GitHub Pages, and sitemap.xml will likes below:</p>
<p><a href="https://blog.0x427567.com/sitemap.xml">https://blog.0x427567.com/sitemap.xml</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;If you need to know how to deploy your blog to GitHub Pages read &lt;a href=&quot;/2016/08/04/Using-Hexo-to-build-a-blog-at-GitHub/&quot; title=&quot;this article&quot;&gt;this article&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;In latest version, Hexo still not include sitemap function, if you need to publish sitemap to webmaster tool some likes Google or Bing you will need install sitemap plugin by yourself.&lt;br&gt;
    
    </summary>
    
    
      <category term="Tutorial" scheme="https://blog.0x427567.com/tags/Tutorial/"/>
    
      <category term="Hexo" scheme="https://blog.0x427567.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>How to get response time with curl</title>
    <link href="https://blog.0x427567.com/2016/09/23/How-to-get-response-time-with-curl/"/>
    <id>https://blog.0x427567.com/2016/09/23/How-to-get-response-time-with-curl/</id>
    <published>2016-09-23T04:10:00.000Z</published>
    <updated>2016-09-23T04:11:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>curl is a powerful tool help us send request to a website, for example:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ curl https://blog.0x427567.com/</div></pre></td></tr></table></figure>
<p>Today, I will tech you guys how to get response time with curl, first we need add -w or –write-out option and we need to know total time, full command likes below:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ curl -w %&#123;time_total&#125; https://blog.0x427567.com/</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>Now total response time will append to end, but response time looks like response content, it’s ok, let’s add some options.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ curl -o /dev/null -s -w %&#123;time_total&#125;\\n https://blog.0x427567.com/</div></pre></td></tr></table></figure>
<p>-s will use silent mode, you will not see progress meter or error message, -o can assign output location, for this case I don’t need save any log so I assign output to /dev/null, \n just break line.</p>
<p>If you need save result to a log file, just assign path and file name.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ curl -o /dev/null -s -w &quot;Response Time: %&#123;time_total&#125;\\n&quot; https://blog.0x427567.com/ &gt; /tmp/curl.log</div></pre></td></tr></table></figure>
<p>Please let me know if you have any question, thanks!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;curl is a powerful tool help us send request to a website, for example:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ curl https://blog.0x427567.com/&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Today, I will tech you guys how to get response time with curl, first we need add -w or –write-out option and we need to know total time, full command likes below:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ curl -w %&amp;#123;time_total&amp;#125; https://blog.0x427567.com/&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Tutorial" scheme="https://blog.0x427567.com/tags/Tutorial/"/>
    
  </entry>
  
  <entry>
    <title>How to clone AWS CodeCommit repository from EC2 instance</title>
    <link href="https://blog.0x427567.com/2016/08/13/How-to-clone-AWS-CodeCommit-repository-from-EC2-instance/"/>
    <id>https://blog.0x427567.com/2016/08/13/How-to-clone-AWS-CodeCommit-repository-from-EC2-instance/</id>
    <published>2016-08-13T10:36:36.000Z</published>
    <updated>2016-09-23T04:12:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>CodeCommit is a git service in AWS, you can own the private repository just a small fee, if you are personal or small group will be not charged any fee in some way.</p>
<p>Well, I will deploy my application from CodeCommit to EC2, below is my way. First I created a repository in CodeCommit.</p>
<img src="/2016/08/13/How-to-clone-AWS-CodeCommit-repository-from-EC2-instance/Create_Repository_In_AWS_CodeCommit.png" alt="Create repository in AWS CodeCommit" title="Create repository in AWS CodeCommit">
<p>Before create a new EC2 instance, add a new IAM role.</p>
<img src="/2016/08/13/How-to-clone-AWS-CodeCommit-repository-from-EC2-instance/Create_New_Role_In_IAM.png" alt="Create a new role in AWS IAM} <a id="more"></a> Now you will see this screen, click select button in **Amazon EC2**. {% asset_img Chose_Amazon_EC2.png Chose Amazon EC2" title="Create a new role in AWS IAM} <!--more--> Now you will see this screen, click select button in **Amazon EC2**. {% asset_img Chose_Amazon_EC2.png Chose Amazon EC2">
<p>Input CodeCommit in filter and click <strong>AWSCodeCommitReadOnly</strong>.</p>
<img src="/2016/08/13/How-to-clone-AWS-CodeCommit-repository-from-EC2-instance/Attach_CodeCommitReadOnly.png" alt="Attach AWSCodeCommitReadOnly" title="Attach AWSCodeCommitReadOnly">
<p>Now review the IAM role, if no any problem then click <strong>Create Role</strong>.</p>
<img src="/2016/08/13/How-to-clone-AWS-CodeCommit-repository-from-EC2-instance/Review_IAM_Role.png" alt="Review IAM Role" title="Review IAM Role">
<p>OK, let’s check the role, you will see something like below.</p>
<img src="/2016/08/13/How-to-clone-AWS-CodeCommit-repository-from-EC2-instance/Check_IAM_Role.png" alt="Check IAM Role" title="Check IAM Role">
<p>Now I can create a new EC2 instance and assign a role, this step is important, do not forgot!</p>
<img src="/2016/08/13/How-to-clone-AWS-CodeCommit-repository-from-EC2-instance/EC2_IAM_Role.png" alt="Assign a role to EC2 instance" title="Assign a role to EC2 instance">
<p>Well done, I can start setting my EC2 instance, first thing is check AWS CLI version, CodeCommit only working with AWS CLI 1.7.38 and later, type <strong>aws –version</strong> in terminal and check the version. For Debian will needs upgrade AWS CLI version, just follow steps.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get purge aws</div><div class="line">$ sudo apt-get install python-pip</div><div class="line">$ sudo pip install awscli</div></pre></td></tr></table></figure>
<p>When done, setting git config, just two  commands.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global credential.helper &apos;!aws codecommit credential-helper $@&apos;</div><div class="line">git config --global credential.UseHttpPath true</div></pre></td></tr></table></figure>
<p>Now clone git repository from CodeCommit.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">admin@ip-10-0-129-84:~$ git clone https://git-codecommit.us-east-1.amazonaws.com/v1/repos/0x427567-Test</div><div class="line">Cloning into &apos;0x427567-Test&apos;...</div><div class="line">warning: You appear to have cloned an empty repository.</div><div class="line">Checking connectivity... done.</div></pre></td></tr></table></figure>
<p>For now, my EC2 can direct clone repository from CodeCommit and do not need setting AWS CLI credential, let me know if you have any question, thanks!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CodeCommit is a git service in AWS, you can own the private repository just a small fee, if you are personal or small group will be not charged any fee in some way.&lt;/p&gt;
&lt;p&gt;Well, I will deploy my application from CodeCommit to EC2, below is my way. First I created a repository in CodeCommit.&lt;/p&gt;
&lt;img src=&quot;/2016/08/13/How-to-clone-AWS-CodeCommit-repository-from-EC2-instance/Create_Repository_In_AWS_CodeCommit.png&quot; alt=&quot;Create repository in AWS CodeCommit&quot; title=&quot;Create repository in AWS CodeCommit&quot;&gt;
&lt;p&gt;Before create a new EC2 instance, add a new IAM role.&lt;/p&gt;
&lt;img src=&quot;/2016/08/13/How-to-clone-AWS-CodeCommit-repository-from-EC2-instance/Create_New_Role_In_IAM.png&quot; alt=&quot;Create a new role in AWS IAM}
    
    </summary>
    
    
      <category term="Tutorial" scheme="https://blog.0x427567.com/tags/Tutorial/"/>
    
      <category term="AWS" scheme="https://blog.0x427567.com/tags/AWS/"/>
    
      <category term="CodeCommit" scheme="https://blog.0x427567.com/tags/CodeCommit/"/>
    
  </entry>
  
  <entry>
    <title>No tears understand callback in JavaScript</title>
    <link href="https://blog.0x427567.com/2016/08/09/No-tears-understand-callback-in-JavaScript/"/>
    <id>https://blog.0x427567.com/2016/08/09/No-tears-understand-callback-in-JavaScript/</id>
    <published>2016-08-09T09:07:34.000Z</published>
    <updated>2016-09-23T04:12:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>Callback function is useful and powerful in JavaScript, but it is confused to many people, how to use and why? Don’t worry, I will explain JavaScript callback function to you in this article.</p>
<p>First, let’s look sample code in below.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">step1</span> (<span class="params"></span>) </span>&#123;</div><div class="line">  setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'This is step 1'</span>)</div><div class="line">  &#125;, <span class="number">3000</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">step2</span> (<span class="params"></span>) </span>&#123;</div><div class="line">  setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'This is step 2'</span>)</div><div class="line">  &#125;, <span class="number">1500</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line">step1()</div><div class="line">step2()</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'This is step 3'</span>)</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>Here I created two function named step1 and step2 and print <strong>This is step 1</strong>, <strong>This is step 2</strong> after 3 and 1.5 seconds, because JavaScript have no sleep function I used <strong>setTimeout</strong> to similar the function. Finally I call step1 and step2 function, print <strong>This is step 3</strong> in last line. OK, when run the code what result will get? you will see <strong>This is step 3</strong>, <strong>This is step 2</strong>, <strong>This is step 1</strong>. WHY? because JavaScript is a non blocking language, simply to explain, when call step1 function, JavaScript will not wait step1 function result, now, JavaScript immediately call step2 function and not wait step2 function result and print <strong>This is step 3</strong>.</p>
<p>If I need print in sequence how should I do? Use callback! Let’s modify the code.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">step1</span> (<span class="params">callback</span>) </span>&#123;</div><div class="line">  setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'This is step 1'</span>)</div><div class="line">    callback()</div><div class="line">  &#125;, <span class="number">3000</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">step2</span> (<span class="params">callback</span>) </span>&#123;</div><div class="line">  setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'This is step 2'</span>)</div><div class="line">    callback()</div><div class="line">  &#125;, <span class="number">1500</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line">step1(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">  step2(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'This is step 3'</span>)</div><div class="line">  &#125;)</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p>What happened now? I pass a anonymous function to step1 and named callback in step1 function, this anonymous function will call step2 function when it be called, now look step1 function, after print <strong>This is step 1</strong> and call callback, it’s meaning step2 function will be called, step2 function is same to step1 function, this sample is show you how to print in sequence and how to use callback function.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Callback function is useful and powerful in JavaScript, but it is confused to many people, how to use and why? Don’t worry, I will explain JavaScript callback function to you in this article.&lt;/p&gt;
&lt;p&gt;First, let’s look sample code in below.&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;step1&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;This is step 1&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;, &lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;step2&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;This is step 2&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;, &lt;span class=&quot;number&quot;&gt;1500&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;step1()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;step2()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;This is step 3&#39;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Tutorial" scheme="https://blog.0x427567.com/tags/Tutorial/"/>
    
      <category term="JavaScript" scheme="https://blog.0x427567.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Uptime Robot - Free monitoring your server</title>
    <link href="https://blog.0x427567.com/2016/08/05/Uptime-Robot-Free-monitoring-your-server/"/>
    <id>https://blog.0x427567.com/2016/08/05/Uptime-Robot-Free-monitoring-your-server/</id>
    <published>2016-08-05T08:10:20.000Z</published>
    <updated>2016-08-05T09:01:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>Do you need to know your website or server still alive from internet? Uptime Robot will help you to monitoring your server from internet and it is free! For free user, Uptime Robot provide 50 monitors and check it every 5 minutes, you can upgrade your account to pro plan then you can monitoring every 30 seconds.<br><a id="more"></a><br>Uptime Robot looks perfect! hmm! I think it’s great but not perfect. First it is not provide single location check, for example, the world only Japan can not connect to your server, but Uptime Robot still tell you all thing is ok, you do not know your customer is on fire.</p>
<p>Second, sometime monitor will broken and not come back again, I need delete this monitor and create a new monitor again, all history log and data will gone.</p>
<p>Uptime Robot<br><a href="https://uptimerobot.com/" rel="external nofollow noopener noreferrer" target="_blank">https://uptimerobot.com/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Do you need to know your website or server still alive from internet? Uptime Robot will help you to monitoring your server from internet and it is free! For free user, Uptime Robot provide 50 monitors and check it every 5 minutes, you can upgrade your account to pro plan then you can monitoring every 30 seconds.&lt;br&gt;
    
    </summary>
    
    
      <category term="DevOps" scheme="https://blog.0x427567.com/tags/DevOps/"/>
    
  </entry>
  
  <entry>
    <title>How to setting Nginx proxy_pass and forward query parameters</title>
    <link href="https://blog.0x427567.com/2016/08/05/How-to-setting-Nginx-proxy-pass-and-forward-query-parameters/"/>
    <id>https://blog.0x427567.com/2016/08/05/How-to-setting-Nginx-proxy-pass-and-forward-query-parameters/</id>
    <published>2016-08-05T04:21:58.000Z</published>
    <updated>2017-08-28T04:14:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>Let’s see basic config of proxy_pass.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">upstream web &#123;</div><div class="line">    server 10.10.10.10;</div><div class="line">    server 10.10.10.20;</div><div class="line">&#125;</div><div class="line"></div><div class="line">server&#123;</div><div class="line">    listen 80;</div><div class="line">    server_name</div><div class="line">    location / &#123;</div><div class="line">        proxy_pass http://web/;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>Well, this setting is work and look like perfect, but it will get some problem, it’s not forward any http get query string and just forward to web root, so we need to change some thing, just follow below.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">upstream web &#123;</div><div class="line">    server 10.10.10.10;</div><div class="line">    server 10.10.10.20;</div><div class="line">&#125;</div><div class="line"></div><div class="line">server&#123;</div><div class="line">    listen 80;</div><div class="line">    server_name</div><div class="line">    location / &#123;</div><div class="line">        proxy_pass http://web$uri;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Now we can do more, forward X-FORWARD-FOR to web server, just 3 lines.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">upstream web &#123;</div><div class="line">    server 10.10.10.10;</div><div class="line">    server 10.10.10.20;</div><div class="line">&#125;</div><div class="line"></div><div class="line">server&#123;</div><div class="line">    listen 80;</div><div class="line">    server_name</div><div class="line">    location / &#123;</div><div class="line">        proxy_pass http://web$uri;</div><div class="line"></div><div class="line">        proxy_set_header HOST $host;</div><div class="line">        proxy_set_header X-Forwarded-Proto $scheme;</div><div class="line">        proxy_set_header X-Real-IP $remote_addr;</div><div class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="UPDATED-2017-08-28"><a href="#UPDATED-2017-08-28" class="headerlink" title="UPDATED@2017-08-28"></a>UPDATED@2017-08-28</h3><p>Remove excess parameter at proxy_pass, thanks to Ricardo Villafáfila Robles.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Let’s see basic config of proxy_pass.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;upstream web &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    server 10.10.10.10;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    server 10.10.10.20;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;server&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    listen 80;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    server_name&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    location / &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        proxy_pass http://web/;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Tutorial" scheme="https://blog.0x427567.com/categories/Tutorial/"/>
    
      <category term="Networking" scheme="https://blog.0x427567.com/categories/Tutorial/Networking/"/>
    
    
      <category term="Nginx" scheme="https://blog.0x427567.com/tags/Nginx/"/>
    
      <category term="Tutorial" scheme="https://blog.0x427567.com/tags/Tutorial/"/>
    
  </entry>
  
  <entry>
    <title>Using Hexo to build a blog at GitHub</title>
    <link href="https://blog.0x427567.com/2016/08/04/Using-Hexo-to-build-a-blog-at-GitHub/"/>
    <id>https://blog.0x427567.com/2016/08/04/Using-Hexo-to-build-a-blog-at-GitHub/</id>
    <published>2016-08-04T13:08:58.000Z</published>
    <updated>2017-02-09T01:02:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo is a fast, simple and powerful blog framework, it’s powered by Node.js, you can deploy your blog to <a href="https://pages.github.com/" title="GitHub Pages" rel="external nofollow noopener noreferrer" target="_blank">GitHub Pages</a>.</p>
<h2 id="Create-a-new-repository-for-blog"><a href="#Create-a-new-repository-for-blog" class="headerlink" title="Create a new repository for blog"></a>Create a new repository for blog</h2><p>First thing first, you need create a repository for blog, but this step is not point in this article, please read detail at GitHub Pages.<br><a id="more"></a></p>
<h2 id="Install-Node-js"><a href="#Install-Node-js" class="headerlink" title="Install Node.js"></a>Install Node.js</h2><p>Now check Node.js is installed, if you never install Node.js, I recommended use <a href="https://github.com/creationix/nvm" title="NVM(Node Version Manager)" rel="external nofollow noopener noreferrer" target="_blank">NVM(Node Version Manager)</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</div></pre></td></tr></table></figure>
<p>When install is done, you need to restart your terminal and install Node.js.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nvm install stable</div></pre></td></tr></table></figure>
<h2 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo-cli</div></pre></td></tr></table></figure>
<h2 id="Create-a-Hexo-project"><a href="#Create-a-Hexo-project" class="headerlink" title="Create a Hexo project"></a>Create a Hexo project</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo init blog</div><div class="line">cd blog</div><div class="line">npm install</div></pre></td></tr></table></figure>
<h2 id="Setting-your-blog"><a href="#Setting-your-blog" class="headerlink" title="Setting your blog"></a>Setting your blog</h2><p>Modify <strong>_config.yml</strong> to setting your blog.</p>
<h3 id="Site"><a href="#Site" class="headerlink" title="Site"></a>Site</h3><table>
<thead>
<tr>
<th>Setting</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>title</td>
<td>Blog title</td>
</tr>
<tr>
<td>subtitle</td>
<td>Blog subtitle</td>
</tr>
<tr>
<td>description</td>
<td>Blog description</td>
</tr>
<tr>
<td>author</td>
<td>Your name</td>
</tr>
<tr>
<td>language</td>
<td>Display language</td>
</tr>
</tbody>
</table>
<h3 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h3><table>
<thead>
<tr>
<th>Setting</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>url</td>
<td>Blog url</td>
</tr>
<tr>
<td>root</td>
<td>The root directory of your blog</td>
</tr>
</tbody>
</table>
<h2 id="Setting-custom-domain"><a href="#Setting-custom-domain" class="headerlink" title="Setting custom domain"></a>Setting custom domain</h2><p>If you do not need use custom domain then skip this section else you <strong>MUST</strong> add this file in source.</p>
<p>Create a file named CNAME in source and edit it, write down your custom domain and save the file.</p>
<p>For example:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#CNAME file</div><div class="line">blog.0x427567.com</div></pre></td></tr></table></figure>
<h2 id="Add-Atom-feed"><a href="#Add-Atom-feed" class="headerlink" title="Add Atom feed"></a>Add Atom feed</h2><p>Install hexo atom plugin</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --save hexo-generator-feed</div></pre></td></tr></table></figure>
<p>Edit <strong>_config.yml</strong> and add below options.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">feed:</div><div class="line">  type: atom</div><div class="line">  path: atom.xml</div><div class="line">  limit: 20</div></pre></td></tr></table></figure>
<h2 id="Add-google-analytics"><a href="#Add-google-analytics" class="headerlink" title="Add google analytics"></a>Add google analytics</h2><p>Edit <strong>_config.yml</strong> in themes/landscape and modify <strong>google_analytics</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">google_analytics: UA-XXXXXXXX-X</div></pre></td></tr></table></figure>
<h2 id="Deploy-your-blog-to-GitHub"><a href="#Deploy-your-blog-to-GitHub" class="headerlink" title="Deploy your blog to GitHub"></a>Deploy your blog to GitHub</h2><p>Install Hexo GitHub deploy plugin</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --save hexo-deployer-git</div></pre></td></tr></table></figure>
<p>Add settings to <strong>_config.yml</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: https://github.com/user/repo</div><div class="line">  branch: master / gh-pg</div></pre></td></tr></table></figure>
<p>Last step!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo deploy --generate</div></pre></td></tr></table></figure>
<p>All done! Happy blogging!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo is a fast, simple and powerful blog framework, it’s powered by Node.js, you can deploy your blog to &lt;a href=&quot;https://pages.github.com/&quot; title=&quot;GitHub Pages&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Create-a-new-repository-for-blog&quot;&gt;&lt;a href=&quot;#Create-a-new-repository-for-blog&quot; class=&quot;headerlink&quot; title=&quot;Create a new repository for blog&quot;&gt;&lt;/a&gt;Create a new repository for blog&lt;/h2&gt;&lt;p&gt;First thing first, you need create a repository for blog, but this step is not point in this article, please read detail at GitHub Pages.&lt;br&gt;
    
    </summary>
    
    
      <category term="Tutorial" scheme="https://blog.0x427567.com/tags/Tutorial/"/>
    
      <category term="Hexo" scheme="https://blog.0x427567.com/tags/Hexo/"/>
    
      <category term="Node.js" scheme="https://blog.0x427567.com/tags/Node-js/"/>
    
      <category term="GitHub" scheme="https://blog.0x427567.com/tags/GitHub/"/>
    
  </entry>
  
</feed>
